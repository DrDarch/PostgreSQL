# ---------------------------------------------------------------------------------------------------------- #
# License: GPLv3                                                                                             #
#													     #	
# For your own responsibility, no warranty for using.                                                        #
#													     #	
# This is only the starting configuration, you should measure of a performance of your			     #
# storage, cpu, network and memory, and then tune some settings. 					     #
# Also a specific database sql traffic shape (more RO or more dml operations) should be taken into account.  #
# The configuration for the master.									     #	
# The configuration for Centos/Redhat.									     #	
# Tested on postgresql version 12.2 on Centos7.								     #
# ---------------------------------------------------------------------------------------------------------- #

# in order to increse efficiency: 
# disable the transparent huge pages in system.

max_connections = 1000                        # Consider using some connection pooling (pgbouncer, pgpool), 
                                              # because opening and closing connections is expensive. 			
superuser_reserved_connections = 5	
shared_buffers = 300MB			      # 30% of the total memory available on the server
temp_buffers = 16MB                           # temporary buffers for each database session, non shared memory
max_prepared_transactions  = 10

# You have install postgresql12-contrib.x86_64 package if you would like to use pg_stat_statements library.
shared_preload_libraries = pg_stat_statements # loaded at server start 
                                              # pg_stat_statements - execution statistics for all SQL queries
pg_stat_statements.max = 10000                # maximum number of statements tracked by module
pg_stat_statements.track = all                # which statements should be tracked

huge_pages = on
# before setting this - prepare system:
# allocate shared memory pages
# getconf PAGE_SIZE ; /etc/sysctl.conf kernel.shmmax and kernel.shmall

work_mem = 4MB			        # session memory for sort and hash table operations
maintenance_work_mem = 256MB		# max. memory for vacum, create index, alter table add foreign key operations
max_stack_depth = 6MB			#  (should be less 1-2MB as a value taken from ulimit -s)
dynamic_shared_memory_type = posix	#  

# - Background Writer -                 
bgwriter_delay = 200ms			# sleep time between bgwriter rounds
bgwriter_lru_maxpages = 100		# in one round a number of pages which will be written
bgwriter_lru_multiplier = 2.0		# how aggresive should be writting

# - Asynchronous Behavior -
effective_io_concurrency = 100          # the number of concuttent I/O disk operations

# WAL
wal_buffers = 6MB 
wal_writer_delay = 10                   # the time when writer sleeps after flushing wal's
full_page_writes = on
wal_level = replica		
fsync = on				# flush data to disk for crash safety
synchronous_commit = off		# if you don't want to lose any transaction, set this to on
wal_sync_method = fdatasync	        # the default for Linux
commit_delay = 0			# delay between transaction commit and flushing WAL to disk

# - Checkpoints -
max_wal_size = 1GB
min_wal_size = 80MB
checkpoint_completion_target = 0.5	

# - Archiving -
# mkdir -p /var/log/pgsql/archive
# chown -R postgres:postgres /var/log/pgsql/
archive_mode = on	 	
archive_command = 'gzip < %p > /var/log/pgsql/archive/%f'	

# - Replication -
max_wal_senders  = 6                   # a number of wal sender processes
wal_keep_segments = 40

# - Standby Servers -
# These settings are ignored on a master server.
hot_standby = on  # allows queries during recovery 

# QUERY TUNING
# - Planner Method Configuration -
enable_seqscan = off                    # in order to increasing using indexes

# - Planner Cost Constants -
seq_page_cost = 1.0                     # the parameters seq and random to the same value
random_page_cost = 1.0                  # in order to increasing using indexes 
cpu_tuple_cost = 0.001
cpu_index_tuple_cost = 0.0005
cpu_operator_cost = 0.00025
default_statistics_target = 300         # has influence to planner's estimates 
constraint_exclusion = partition
effective_cache_size = 500MB            # set to half value of total memory on server

# - Reporting and logging -

log_destination = 'stderr'	
logging_collector = on	
log_directory = 'log'			
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_truncate_on_rotation = on		
log_rotation_age = 1d			
log_rotation_size = 1GB		
log_lock_waits = on
log_statement = none
log_temp_files = 0
log_line_prefix ='%t [%p]: [%l-1] db=%d,user=%u '
log_timezone = 'America/New_York'
client_min_messages = 'notice'
log_min_messages = 'warning'
log_min_error_statement = error
log_min_duration_statement = 0
log_checkpoints = on
log_connections = on
log_disconnections = on
log_duration = off
log_error_verbosity = verbose

# STATISTICS

# - Query and Index Statistics Collector -
track_counts = on

# - Monitoring -
#log_parser_stats = off                    # when need profiling - total statement statistics
#log_planner_stats = off                   # when need profiling
#log_executor_stats = off                  # when need profiling
#log_statement_stats = off                 # when need profiling

# - Autovacuum -
vacuum_cost_delay = 50                     # time the process will sleep when the cost limit has been exceeded
autovacuum = on
log_autovacuum_min_duration = 0            # log all autovacuum actions
autovacuum_max_workers = 6
autovacuum_naptime = 10min                 # time to sleep between autovacuum runs
autovacuum_vacuum_threshold = 100          # minimum number of changes in table which trigger a VACUUM
autovacuum_analyze_threshold = 100         # minimum number of changes in table which trigger a ANALYZE
autovacuum_vacuum_scale_factor = 0.2       # trigger a vacuum if 20% of table size
autovacuum_analyze_scale_factor = 0.1      # trigger an analyze if 10% of table size
autovacuum_freeze_max_age = 200000000      # a number of transactions, in order to clean up pg_multixact directory

# - Locale and Formatting -
datestyle = 'iso, mdy'
timezone = 'America/New_York'
lc_messages = 'en_US.UTF-8'			
lc_monetary = 'en_US.UTF-8'			
lc_numeric = 'en_US.UTF-8'			
lc_time = 'en_US.UTF-8'				

# default configuration for text search
default_text_search_config = 'pg_catalog.english'

# transaction
deadlock_timeout = 300s
max_locks_per_transaction = 64 
